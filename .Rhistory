library(data.table)
install.packages("h2o")
library(h2o)
library(actuar)
package(actuar)
package.install(actuar)
vecteur = c(1,2,7,10)
vecteur <- c(1,2,7,10)
?mean
x <- list(1,2,3,4,5)
x
?matrix
matrix(1:6, nrow = 2, ncol = 3)
matrix(c(1,3,5,2,4,6,0,0,0), nrow = 2, ncol = 3)
m <- matrix(c(1,3,5,2,4,6,0,0,0), nrow = 3, ncol = 3)
m
m <- matrix(c(1,3,5,2,4,6,0,0,0), nrow = 3, ncol = 3, byrow = TRUE)
m
x <- matrix(c(1,2,3,4,5), nrow = 1, ncol = 5)
x
x <- list(1,2,3,4,5)
x
test <- rep(FALSE, 4)
test
x <- list(c(1,2,3,4,5))
x
test$names
x <- c(1,2,3,4,5)
m <- matrix(c(1,3,5,2,4,6,0,0,0), nrow = 3, ncol = 3, byrow = TRUE)
test <- rep(FALSE, 4)
liste <- list(x,m,test)
liste <- list(x,m,test)
names(liste)
liste
liste$names
names(liste)
len(liste[3])
length(liste[3])
mode(test)
is.matrix(m)
is.matrix(m)*4
1:3
1:3:2
?:
?:
?seq
help(":")
rep(c(0,6),3)
seq(1,10,3)
help(:)
help(":")
rep(seq(1,3),3)
seq(1,2,0.1)
seq(1,19,2)
(10:20)/10
(1:10)*2 - 1
(-2:2)
rep((-2:2),2)
-2:2
(1:10)*10
rep(-2:2, each=2)
?apply
x <- [[1,2,3],[4,5,6],[7,8,9]]
x <- matrix(1:6,nrow=2,ncol=3)
apply(x,2, sum)
apply(x,1, sum)
apply(x,2, sum)
apply(x,1, sum)
x <- matrix(1:6,nrow=2,ncol=3)
x
apply(x,2, sum)
?gamma
factorial(seq(1,10))
x <- sample(20)
x
max(x)
x[1:5]
mean(x[1:5])
mean(x[15:20])
mean(x[16:20])
?tail
mean(tail(x,5))
x <- matrix(sample(70),nrow=7,ncol=10)
x
apply(x,1,sum)
apply(x,2,mean)
x <- matrix(sample(70),nrow=10,ncol=7)
apply(x,1,sum)
apply(x,2,mean)
max(x[1:3,1:3])
x[1:3,1:3]
x
x[apply(x,2,mean)> 7,]
x[apply(x,1,mean)> 7,]
x[rowMeans(x) > 7,]
interet <- (1+i)^1:5
i <- 0.04
interet <- (1+i)^1:5
interet
interet <- (1+i)^(1:5)
interet
P/interet
P <- c(1,1.5,1.5,1.5,2)
P/interet
sum(P/interet)
w <- c(0.15,0.04,0.05,0.06,0.17,0.16,0.11,0.09)
sum(w*x/sum(w))
sum(w.*x/sum(w))
sum(w*x/sum(w))
x <- c(7,13,3,8,12,12,20,11)
w <- c(0.15,0.04,0.05,0.06,0.17,0.16,0.11,0.09)
sum(w*x/sum(w))
x <- 10^(seq(1:6))
x
x <- 10^(seq(0:6))
x
x <- 10^(seq(0:6))
x
p <- seq(1:7)/28
x*p
sum(x*p)
v <- sum(p*(x-e)*(x-e))
e <- sum(x*p)
v <- sum(p*(x-e)*(x-e))
v
e
p
x
x <- 10^(seq(0:6))
x
x <- 10^(0:6)
x
x <- 10^(0:6)
p <- seq(1:7)/28
e <- sum(x*p)
e
v <- sum(p*(x-e)*(x-e))
v
v <- 1/1.06
v
v^(0:10)
k <- seq(1:10)
k
v^(0:9)
vp <- v^(0:9)
k <- seq(1:10)
k*vp
sum(k*vp)
obs <- (2,3,5,5,5,6,7)
obs <- c(2,3,5,5,5,6,7)
moyenne <- var(obs)
moyenne <- mean(obs)
variance <- (1/length(obs))*(X)
variance <- ((1/(length(obs)-1))*(X-moyenne)^2
variance <- (1/(length(obs)-1))*(X-moyenne)*(X-moyenne)
variance <- (1/(length(obs)-1))*(obs-moyenne)*(obs-moyenne)
variance
variance <- (1/(length(obs)-1))*sum((obs-moyenne)*(obs-moyenne))
variance
var(obs)
rpareto <- function(n, shape, scale)
scale <- runif(n)^((-1/shape) - 1)
rpareto(100,2,500)
print(scale)
rpareto(100,2,500)
rpareto <- function(n, shape, scale)
scale <- runif(n)^((-1/shape) - 1)
return scale
return(scale)
rpareto <- function(n, shape, scale)
scale <- runif(n)^((-1/shape) - 1)
return(scale)
rpareto <- function(n, shape, scale)
scale <- runif(n)^((-1/shape) - 1)
return(scale)
rpareto <- function(n, shape, scale)
{
scale <- runif(n)^((-1/shape) - 1)
return(scale)
}
rpareto(c(100,200),2,500)
rpareto(c(100,150,200,250,300,350),2,500)
sample <- rpareto(c(100,150,200,250,300,350),2,500)
paste("sample", sample, sep="")
paste("sample", 1:5, sep="")
names(sample)<-paste("sample", 1:5, sep="")
sample
rpareto <- function(n, shape, scale)
{
res <- scale*runif(n)^((-1/shape) - 1)
return(res)
}
sample <- rpareto(c(100,150,200,250,300,350),2,500)
names(sample)<-paste("sample", 1:5, sep="")
sample <- rpareto(c(100,150,200,250,300,350),2,500)
names(sample)<-paste("sample", 1:5, sep="")
sample
sample <- rpareto(c(100,150,200,250,300),2,500)
names(sample)<-paste("sample", 1:5, sep="")
sample
sample <- list(size=5)
sample <- rpareto(c(100,150,200,250,300),2,500)
sample <- list(size=5)
sample <- rpareto(100,2,500)
for(i in nbs)
{
sample[i] <- rpareto(100,2,500)
}
nbs <- c(100,150,200,250,300)
for(i in nbs)
{
sample[i] <- rpareto(100,2,500)
}
sample <- list(size=5)
nbs <- c(100,150,200,250,300)
for(i in nbs)
{
sample[[i]] <- rpareto(100,2,500)
}
rpareto <- function(n, shape, scale)
{
res <- scale*runif(n)^((-1/shape) - 1)
return(as.vector(res))
}
sample <- list(size=5)
nbs <- c(100,150,200,250,300)
for(i in nbs)
{
sample[[i]] <- rpareto(100,2,500)
}
x <- lapply(seq(100,300, by=50), rpareto, shape=2, scale=500)
sapply(x,mean)
lapply(x, function(x),sort(ppareto(x,2,500)))
lapply(x, function(x) sort(ppareto(x,2,500)))
lapply(x, function(x) sort(rpareto(x,2,500)))
ppareto <- function(x, shape, scale)
{
res <- 1-(scale/(x+scale))^(shape)
}
ppareto <- function(x, shape, scale)
{
res <- 1-(scale/(x+scale))^(shape)
return(res)
}
lapply(x, function(x) sort(ppareto(x,2,500)))
hist(x$sample5)
hist(x[5])
x <- lapply(seq(100,300, by=50), rpareto, shape=2, scale=500)
m <- matrix(c(100,0,0,0,
0,100,0,0,
4.5,4.5,100,0,
4.5,4.5,4.5,100), nrow=2, ncol=3)
m <- matrix(c(100,0,0,0,
0,100,0,0,
4.5,4.5,100,0,
4.5,4.5,4.5,100), nrow=4, ncol=4)
m
m <- matrix(c(100,0,0,0,
0,100,0,0,
4.5,4.5,100,0,
4.5,4.5,4.5,100), ncol=4, nrow=4)
m
t(m)
m <- t(matrix(c(100,0,0,0,
0,100,0,0,
4.5,4.5,100,0,
4.5,4.5,4.5,100), ncol=4, nrow=4))
m
library(matlib)
library("MASS", lib.loc="C:/Program Files/R/R-3.3.2/library")
install.packages("MASS")
m <- t(matrix(c(100,0,0,0,
0,100,0,0,
4.5,4.5,100,0,
4.5,4.5,4.5,100), ncol=4, nrow=4))
library(MASS)
ginv(m)
A <- t(matrix(c(100,0,0,0,
0,100,0,0,
4.5,4.5,100,0,
4.5,4.5,4.5,100), ncol=4, nrow=4))
B <- c(95.46, 90.70, 98.61, 101.75)
solve(A, B)
X <- solve(A, B)
X(1)
X[1]
X[2] <- X[2]^(1/2)
X[3] <- X[3]^(1/3)
X[4] <- X[4]^(1/4)
X
R <- 1/X - 1
R
R_pourcent <- R*100
R_pourcent
setwd("C:/Users/Grégoire/Dropbox/ISFA/Cours 2A/Analyse de donnees/TP2")
CSD <- read.csv("CrimeSteteDate.csv", header=TRUE)
CSD <- read.csv("CrimeStateDate.csv", header=TRUE)
View(CSD)
SR0910 <- read.table("SecRoutiere0910.txt", header=TRUE)
librabry(ade4)
library(ade4)
install.packages("ade4")
library(ade4)
library(ade4)
install.packages("ade4")
library(ade4)
data(banque)
names(banque)
cv2005 <- CSD[CSD$Date=="2005",]
dim(cv2005)
crime <- cv2005$Crime_Violent
class(crise)
class(crime)
hist(crime, col="lightblue", main="Nombre de crimes violents")
par(mfrow=c(1,2))
dotchart(crime, main="Série brute", pch=20)
dotchart(sort(crime), main="Série ordonnée", pch=20)
par(mfrow=c(1,1))
boxplot(crime, col="lightblue", main="Nombre de crimes violents")
boxplot(crime, col="lightblue", horizontal=TRUE, main="Nombre de crimes violents")
class(banque$csp)
levels(banque$csp)
length(levels(banque$csp))
freqrel <- summary(banque$csp)/length(banque$csp)
360*freqrel
pie(summary(banque$csp), main="CSP présentes dans la banque")
pie(summary(banque$sexe), main="Le genre présent dans cette banque",
col=c("darkblue", "pink"), label=c("homme", "femme"))
barplot(banque$csp, main="Fréquences absolues", col="lightblue", las=2)
par(mfrow=c(1,2))
barplot(banque$csp, main="Fréquences absolues", col="lightblue", las=2)
barplot(summary(banque$csp), main="Fréquences absolues", col="lightblue", las=2)
barplot(summary(banque$csp)/length(banque$csp), main="Fréquences absolues", col="lightblue", las=2)
par(mfrow=c(1,2))
barplot(summary(banque$csp), main="Fréquences absolues", col="lightblue", las=2)
barplot(summary(banque$csp)/length(banque$csp), main="Fréquences relatives", col="lightblue", las=2)
cor(SR0910[,9], SR0910[,10])
plot(SR0910[,10], SR0910[,9], pch=20, main="Similitude du nb de blessés sur 2 ans",
xlab="Blessés en 2009", ylab="Blessés en 2010")
par(mfrow=c(1,1))
cor(SR0910[,9], SR0910[,10])
plot(SR0910[,10], SR0910[,9], pch=20, main="Similitude du nb de blessés sur 2 ans",
xlab="Blessés en 2009", ylab="Blessés en 2010")
library(gplots)
install.packages("glplots")
install.packages("gplots")
library(gplots)
balloonplot(table(banque$age, banque$interdit), main="Interdits bancaires et classes d'age")
